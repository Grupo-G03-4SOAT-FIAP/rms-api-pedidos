version: '3.9'

services:
  db-pedidos:
    container_name: db-pedidos
    hostname: db-pedidos
    image: postgres:15.6
    ports:
      - '8002:5432'
    expose:
      - 5432
    healthcheck:
      test: ['CMD', 'pg_isready -U ${DB_USER:-pguser} -d ${DB_NAME:-pedidos}']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USERNAME:-pguser}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-pgpwd}
      POSTGRES_DB: ${DB_NAME:-pedidos}
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    restart: always
    networks:
      - rms

  api-pedidos:
    container_name: api-pedidos
    hostname: api-pedidos
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '3002:3002'
    expose:
      - 3002
    env_file:
      - .env
    environment:
      DB_HOST: db-pedidos
      DB_PORT: 5432
      DB_USER: ${DB_USERNAME:-pguser}
      DB_PASSWORD: ${DB_PASSWORD:-pgpwd}
      DB_NAME: ${DB_NAME:-rms}
      DB_SSL: ${DB_SSL:-false}
      URL_API_PAGAMENTOS: http://api-pagamentos:3003/pedido
      COGNITO_USER_POOL_ID: ${COGNITO_USER_POOL_ID:-}
      COGNITO_CLIENT_ID: ${COGNITO_CLIENT_ID:-}
    restart: always
    networks:
      - rms
    depends_on:
      - db-pedidos

networks:
  rms:
    name: rms_network
    driver: bridge
    external: true

volumes:
  postgres:
